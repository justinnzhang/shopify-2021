[{"C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\index.js":"1","C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\reportWebVitals.js":"2","C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\App.js":"3","C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\pages\\search.jsx":"4","C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\pages\\index.jsx":"5","C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\pages\\summary.jsx":"6","C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\animation\\Variants.js":"7","C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\animation\\FadeUpParent.jsx":"8","C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\animation\\FadeUpChildren.jsx":"9","C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\animation\\SummaryPosterAnimation.jsx":"10","C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\animation\\AnimationTrigger.jsx":"11","C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\components\\Spacer.jsx":"12","C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\components\\NominationList.jsx":"13","C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\components\\RouterNavigation.jsx":"14","C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\components\\MovieDetails.jsx":"15","C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\components\\MovieList.jsx":"16","C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\components\\PosterPlaceholder.jsx":"17","C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\pages\\404.jsx":"18","C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\components\\MobileNominationList.jsx":"19"},{"size":500,"mtime":1608838488724,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1608838488724,"results":"22","hashOfConfig":"21"},{"size":791,"mtime":1609020220950,"results":"23","hashOfConfig":"21"},{"size":14161,"mtime":1610134805293,"results":"24","hashOfConfig":"21"},{"size":1889,"mtime":1614970461827,"results":"25","hashOfConfig":"21"},{"size":5870,"mtime":1609019629580,"results":"26","hashOfConfig":"21"},{"size":1478,"mtime":1610134805291,"results":"27","hashOfConfig":"21"},{"size":901,"mtime":1608952078675,"results":"28","hashOfConfig":"21"},{"size":403,"mtime":1608937724808,"results":"29","hashOfConfig":"21"},{"size":2894,"mtime":1609004615080,"results":"30","hashOfConfig":"21"},{"size":841,"mtime":1609004403373,"results":"31","hashOfConfig":"21"},{"size":360,"mtime":1608849494351,"results":"32","hashOfConfig":"21"},{"size":4938,"mtime":1610134805292,"results":"33","hashOfConfig":"21"},{"size":66,"mtime":1609006817731,"results":"34","hashOfConfig":"21"},{"size":7216,"mtime":1609002215450,"results":"35","hashOfConfig":"21"},{"size":6500,"mtime":1610134805291,"results":"36","hashOfConfig":"21"},{"size":310,"mtime":1608999457800,"results":"37","hashOfConfig":"21"},{"size":1617,"mtime":1609022161083,"results":"38","hashOfConfig":"21"},{"size":6196,"mtime":1610135723434,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"gg7duu",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\index.js",[],["82","83"],"C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\reportWebVitals.js",[],"C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\App.js",[],"C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\pages\\search.jsx",["84","85"],"import React, { useState, useCallback, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// Shopify Polaris Components\r\nimport {\r\n  AppProvider,\r\n  Button,\r\n  Page,\r\n  Layout,\r\n  Card,\r\n  TextField,\r\n  EmptyState,\r\n  TextStyle,\r\n  Banner,\r\n  Modal,\r\n  Frame,\r\n  Toast,\r\n  Form,\r\n  Sticky,\r\n} from '@shopify/polaris';\r\n\r\nimport enTranslations from '@shopify/polaris/locales/en.json';\r\n\r\n// Icons - React Icons\r\nimport { IconContext } from 'react-icons';\r\nimport { IoSearchOutline } from 'react-icons/io5';\r\n\r\n// Custom components & CSS\r\nimport Spacer from '../components/Spacer';\r\nimport MovieList from '../components/MovieList';\r\nimport NominationList from '../components/NominationList';\r\nimport MovieDetails from '../components/MovieDetails';\r\n\r\n// Custom animation components\r\nimport FadeUpParent from '../animation/FadeUpParent';\r\nimport FadeUpChildren from '../animation/FadeUpChildren';\r\n\r\n// React router function\r\nimport { NavigateTo } from '../components/RouterNavigation';\r\nimport MobileNominationList from '../components/MobileNominationList';\r\n\r\nconst Main = () => {\r\n  // Loading states\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\r\n  const [isLoadingDetails, setIsLoadingDetails] = useState(false);\r\n\r\n  // The 'page' that the api pulls from next\r\n  const [searchPage, setSearchPage] = useState(1);\r\n\r\n  // Information provided by the API\r\n  const [searchData, setSearchData] = useState(null); // Search data including number of search results\r\n  const [movieData, setMovieData] = useState(null); // Only the list of movies from the search term\r\n  const [movieDetails, setMovieDetails] = useState(null); // Additional details when the user opens the movie details modal\r\n\r\n  // Global errors variable\r\n  const [errors, setErrors] = useState({});\r\n\r\n  // Number of searches conducted - only used to show the empty states\r\n  const [count, setCount] = useState(0);\r\n\r\n  // Search terms\r\n  const [value, setValue] = useState(''); // This hook is directly used for search and is passed to the API\r\n  const [lastSearched, setLastSearched] = useState(''); // This is used to store the last successful search\r\n\r\n  // Stores all nominated movies\r\n  const [nominated, setNominated] = useState([]);\r\n\r\n  // Search Bar functions\r\n  const handleChange = useCallback((newValue) => setValue(newValue), []);\r\n  const handleClearButtonClick = useCallback(() => handleChange(''), []);\r\n\r\n  // Movie details modal\r\n  const [active, setActive] = useState(false);\r\n  const toggleActive = useCallback(() => setActive((active) => !active), []);\r\n\r\n  // Toast indicator for completion of nominations\r\n  const [activeToast, setActiveToast] = useState(false);\r\n  const toggleActiveToast = useCallback(\r\n    () => setActiveToast((activeToast) => !activeToast),\r\n    []\r\n  );\r\n  const [toastMessage, setToastMessage] = useState('');\r\n\r\n  const toastMarkup = activeToast ? (\r\n    <Toast content={toastMessage} onDismiss={toggleActiveToast} />\r\n  ) : null;\r\n\r\n  const history = useHistory();\r\n\r\n  // Checks the width of the window to toggle between a mobile and desktop nomination list component\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n\r\n  // Checks to see if there's existing nominations in localStorage\r\n  useEffect(() => {\r\n    if (localStorage.getItem('nominated')) {\r\n      setToastMessage('Loaded previous nominations');\r\n      setNominated(JSON.parse(localStorage.getItem('nominated')));\r\n      toggleActiveToast();\r\n    }\r\n  }, []);\r\n\r\n  // Function to search for a movie using the search term\r\n  const searchMovies = async () => {\r\n    setErrors({});\r\n    setIsLoading(true);\r\n    setSearchPage(1);\r\n\r\n    await axios\r\n      .get(\r\n        `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_API_KEY}&s=${value}&type=movie`\r\n      )\r\n      .then((res) => {\r\n        if (res.data.Error) {\r\n          setErrors({ searchError: 'Movie not found' });\r\n          setIsLoading(false);\r\n        } else {\r\n          setSearchData(res.data);\r\n          setMovieData(res.data.Search);\r\n          setIsLoading(false);\r\n          setCount(count + 1);\r\n          setLastSearched(value);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setErrors({ searchError: 'An error occured' });\r\n        setCount(count - 1);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  // Function to pull more movies, based on the last successful search term\r\n  const loadMoreMovies = async () => {\r\n    setIsLoadingMore(true);\r\n    console.log(searchPage);\r\n    await axios\r\n      .get(\r\n        `https://www.omdbapi.com/?apikey=${\r\n          process.env.REACT_APP_API_KEY\r\n        }&s=${lastSearched}&page=${searchPage + 1}&type=movie`\r\n      )\r\n      .then((res) => {\r\n        if (res.data.Error) {\r\n          setErrors({ loadError: 'You have reached the end' });\r\n          setIsLoadingMore(false);\r\n        } else {\r\n          movieData.push(...res.data.Search);\r\n          setIsLoadingMore(false);\r\n          setSearchPage(searchPage + 1);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setIsLoadingMore(false);\r\n        setErrors({ loadError: 'An error occured' });\r\n      });\r\n  };\r\n\r\n  // Function to add a nomination, pushing values from a temporary object\r\n  function addNomination(id, Title, Year, Poster) {\r\n    setErrors({});\r\n\r\n    if (nominated.length === 5) {\r\n      setErrors({\r\n        nominationError: 'You can only nominate up to 5 movies.',\r\n      });\r\n    } else {\r\n      const tempNominations = nominated;\r\n\r\n      let temp = {\r\n        id: id,\r\n        Title: Title,\r\n        Year: Year,\r\n        Poster: Poster,\r\n      };\r\n\r\n      tempNominations.push(temp);\r\n\r\n      if (tempNominations.length === 5) {\r\n        setToastMessage('Maximum nominations reached');\r\n        toggleActiveToast();\r\n      }\r\n\r\n      setNominated(tempNominations);\r\n      localStorage.setItem('nominated', JSON.stringify(tempNominations));\r\n    }\r\n  }\r\n\r\n  // Function to remove a nomination, used slice and new arrays in order to circumvent React's shallow re-rendering\r\n  function removeNomination(index) {\r\n    setErrors({});\r\n\r\n    const temp1 = nominated;\r\n\r\n    if (index === 0) {\r\n      const ans = temp1.slice(1);\r\n\r\n      setNominated(ans);\r\n      localStorage.setItem('nominated', JSON.stringify(ans));\r\n    } else if (index === temp1.length - 1) {\r\n      const ans = temp1.slice(0, index);\r\n\r\n      setNominated(ans);\r\n      localStorage.setItem('nominated', JSON.stringify(ans));\r\n    } else {\r\n      const ans1 = temp1.slice(0, index);\r\n      const ans2 = temp1.slice(index + 1, nominated.length);\r\n\r\n      setNominated(ans1.concat(ans2));\r\n      localStorage.setItem('nominated', JSON.stringify(ans1.concat(ans2)));\r\n    }\r\n\r\n    if (JSON.parse(localStorage.getItem('nominated')).length === 0) {\r\n      localStorage.removeItem('nominated');\r\n    }\r\n  }\r\n\r\n  // Function that calls a different API for more details about a movie based on a given IMDb Id\r\n  const loadMovieDetails = async (id) => {\r\n    setErrors({});\r\n    setIsLoadingDetails(true);\r\n    setActive(true);\r\n\r\n    await axios\r\n      .get(\r\n        `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_API_KEY}&i=${id}`\r\n      )\r\n      .then((res) => {\r\n        if (res.data.Error) {\r\n          setErrors({ detailsError: 'Movie not found' });\r\n          setIsLoadingDetails(false);\r\n        } else {\r\n          setMovieDetails(res.data);\r\n          setIsLoadingDetails(false);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setErrors({ detailsError: 'An error has occured. Please try again.' });\r\n        setIsLoadingDetails(false);\r\n      });\r\n  };\r\n\r\n  // Handles screen resizing and clears listeners on unmount\r\n  useEffect(() => {\r\n    const handleWindowResize = () => setWidth(window.innerWidth);\r\n    window.addEventListener('resize', handleWindowResize);\r\n    return () => window.removeEventListener('resize', handleWindowResize);\r\n  }, []);\r\n\r\n  return (\r\n    <AppProvider i18n={enTranslations}>\r\n      <Frame>\r\n        {toastMarkup}\r\n        <FadeUpParent keyPass='Main Page Parent'>\r\n          <Page\r\n            title='The Shoppies'\r\n            separator\r\n            breadcrumbs={[\r\n              { content: 'Landing', onAction: () => NavigateTo('/', history) },\r\n            ]}\r\n            subtitle='Movie Search'\r\n          >\r\n            <Modal\r\n              large\r\n              title\r\n              open={active}\r\n              onClose={toggleActive}\r\n              secondaryActions={[\r\n                {\r\n                  content: 'Close',\r\n                  onAction: toggleActive,\r\n                },\r\n              ]}\r\n              instant={false}\r\n            >\r\n              <Modal.Section>\r\n                <MovieDetails\r\n                  isLoadingDetails={isLoadingDetails}\r\n                  movieDetails={movieDetails}\r\n                  errors={errors}\r\n                />\r\n              </Modal.Section>\r\n            </Modal>\r\n\r\n            <FadeUpChildren>\r\n              <Layout>\r\n                <Layout.Section>\r\n                  <Card>\r\n                    <Card.Section>\r\n                      <Form>\r\n                        <TextField\r\n                          label='Search for a movie title'\r\n                          placeholder='Try Avengers, The Room, or Finding Nemo'\r\n                          value={value}\r\n                          onChange={handleChange}\r\n                          clearButton\r\n                          onClearButtonClick={handleClearButtonClick}\r\n                          error={errors.searchError}\r\n                          prefix={\r\n                            <IconContext.Provider\r\n                              value={{\r\n                                style: { verticalAlign: '-0.1em' },\r\n                              }}\r\n                            >\r\n                              <IoSearchOutline />\r\n                            </IconContext.Provider>\r\n                          }\r\n                          autoFocus={true}\r\n                        />\r\n\r\n                        <Spacer amount={10} />\r\n\r\n                        <Button\r\n                          primary\r\n                          onClick={() => searchMovies()}\r\n                          loading={isLoading ? true : false}\r\n                          submit={true}\r\n                        >\r\n                          Search\r\n                        </Button>\r\n                      </Form>\r\n                    </Card.Section>\r\n                  </Card>\r\n                </Layout.Section>\r\n              </Layout>\r\n            </FadeUpChildren>\r\n\r\n            <Spacer />\r\n\r\n            {nominated.length === 5 && (\r\n              <FadeUpChildren keyPass='Completed banner'>\r\n                <Banner\r\n                  title='Maximum nominations reached'\r\n                  status='info'\r\n                  action={{\r\n                    content: 'Continue',\r\n                    onAction: () => NavigateTo('/summary', history),\r\n                  }}\r\n                >\r\n                  <p>You've selected your 5 nominations, continue?</p>\r\n                </Banner>\r\n              </FadeUpChildren>\r\n            )}\r\n\r\n            <Spacer />\r\n\r\n            <FadeUpChildren>\r\n              <Layout>\r\n                {width > 820 ? (\r\n                  <Layout.Section secondary>\r\n                    <Sticky offset>\r\n                      <NominationList\r\n                        nominationList={nominated}\r\n                        removeNomination={removeNomination}\r\n                        loadMovieDetails={loadMovieDetails}\r\n                        errors={errors}\r\n                      />\r\n                    </Sticky>\r\n                  </Layout.Section>\r\n                ) : (\r\n                  <MobileNominationList\r\n                    nominationList={nominated}\r\n                    removeNomination={removeNomination}\r\n                    loadMovieDetails={loadMovieDetails}\r\n                    errors={errors}\r\n                    detailsActive={active}\r\n                  />\r\n                )}\r\n                <Layout.Section>\r\n                  {count === 0 && !isLoading && (\r\n                    <Card>\r\n                      <Card.Section>\r\n                        <EmptyState\r\n                          heading='Search for a movie to get started'\r\n                          image='https://cdn.shopify.com/s/files/1/0262/4071/2726/files/emptystate-files.png'\r\n                        >\r\n                          {width > 820 ? (\r\n                            <p>\r\n                              Your nomination list will update with each new\r\n                              nomination\r\n                            </p>\r\n                          ) : (\r\n                            <p>\r\n                              Your nomination list can be accessed by tapping\r\n                              the trophy icon\r\n                            </p>\r\n                          )}\r\n                        </EmptyState>\r\n                      </Card.Section>\r\n                    </Card>\r\n                  )}\r\n\r\n                  <MovieList\r\n                    isLoading={isLoading}\r\n                    movieData={movieData}\r\n                    searchData={searchData}\r\n                    searchTerm={lastSearched}\r\n                    callback={addNomination}\r\n                    nominationList={nominated}\r\n                    loadMovieDetails={loadMovieDetails}\r\n                  />\r\n                  <Spacer />\r\n\r\n                  {count > 0 && (\r\n                    <Button\r\n                      fullWidth\r\n                      primary\r\n                      loading={isLoadingMore ? true : false}\r\n                      onClick={() => loadMoreMovies()}\r\n                    >\r\n                      Load more\r\n                    </Button>\r\n                  )}\r\n\r\n                  <TextStyle variation='negative'>{errors.loadError}</TextStyle>\r\n                </Layout.Section>\r\n              </Layout>\r\n            </FadeUpChildren>\r\n          </Page>\r\n        </FadeUpParent>\r\n      </Frame>\r\n    </AppProvider>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\pages\\index.jsx",[],"C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\pages\\summary.jsx",["86","87"],"import React, { useState, useCallback, useEffect } from 'react';\r\nimport { AnimatePresence } from 'framer-motion';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// Shopify Polaris Components\r\nimport {\r\n  AppProvider,\r\n  Button,\r\n  Page,\r\n  Layout,\r\n  Card,\r\n  TextField,\r\n  DisplayText,\r\n  Form,\r\n} from '@shopify/polaris';\r\n\r\nimport enTranslations from '@shopify/polaris/locales/en.json';\r\n\r\n// Icons - React Icons\r\nimport { IconContext } from 'react-icons';\r\nimport { IoPerson } from 'react-icons/io5';\r\n\r\n// Custom components & CSS\r\nimport Spacer from '../components/Spacer';\r\n\r\n// Custom animation components\r\nimport FadeUpParent from '../animation/FadeUpParent';\r\nimport FadeUpChildren from '../animation/FadeUpChildren';\r\nimport AnimationTrigger from '../animation/AnimationTrigger';\r\nimport SummaryPosterAnimation from '../animation/SummaryPosterAnimation';\r\n\r\n// React router function\r\nimport { NavigateTo } from '../components/RouterNavigation';\r\n\r\nconst Summary = () => {\r\n  // Stores all nominated movies\r\n  const [nominated, setNominated] = useState([]);\r\n\r\n  const [step, setStep] = useState(1);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  // Text input functions\r\n  const [value, setValue] = useState('');\r\n  const handleChange = useCallback((newValue) => setValue(newValue), []);\r\n  const handleClearButtonClick = useCallback(() => handleChange(''), []);\r\n\r\n  const history = useHistory();\r\n\r\n  // Checking for existing nominations in local storage, redirecting back to /search if non existent\r\n  useEffect(() => {\r\n    if (localStorage.getItem('nominated')) {\r\n      if (JSON.parse(localStorage.getItem('nominated')).length === 5) {\r\n        setNominated(JSON.parse(localStorage.getItem('nominated')));\r\n      } else {\r\n        NavigateTo('/search', history);\r\n      }\r\n    } else {\r\n      NavigateTo('/search', history);\r\n    }\r\n  }, []);\r\n\r\n  const handleNextStep = () => {\r\n    if (value !== '') {\r\n      setStep(step + 1);\r\n    } else {\r\n      setErrors({ noName: 'You have a name right?' });\r\n    }\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    localStorage.removeItem('nominated');\r\n    NavigateTo('/', history);\r\n  };\r\n\r\n  return (\r\n    <AppProvider i18n={enTranslations}>\r\n      <AnimatePresence exitBeforeEnter>\r\n        <Page\r\n          breadcrumbs={[\r\n            {\r\n              content: 'Movie Search',\r\n              onAction: () => NavigateTo('/search', history),\r\n            },\r\n          ]}\r\n          title='The Shoppies'\r\n          separator\r\n          subtitle='Summary'\r\n          narrowWidth\r\n        >\r\n          {step === 1 && (\r\n            <FadeUpParent keyPass='Summary Page Parent'>\r\n              <Layout>\r\n                <Layout.Section oneHalf>\r\n                  <Card sectioned title='Enter your first name'>\r\n                    <Form>\r\n                      <TextField\r\n                        placeholder='Whose nominations are these?'\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        clearButton\r\n                        onClearButtonClick={handleClearButtonClick}\r\n                        prefix={\r\n                          <IconContext.Provider\r\n                            value={{\r\n                              style: { verticalAlign: '-0.1em' },\r\n                            }}\r\n                          >\r\n                            <IoPerson />\r\n                          </IconContext.Provider>\r\n                        }\r\n                        autoFocus={true}\r\n                        error={errors.noName}\r\n                      />\r\n\r\n                      <Spacer amount={10} />\r\n\r\n                      <Button\r\n                        primary\r\n                        onClick={() => handleNextStep()}\r\n                        submit={true}\r\n                      >\r\n                        Next\r\n                      </Button>\r\n                    </Form>\r\n                  </Card>\r\n                </Layout.Section>\r\n              </Layout>\r\n            </FadeUpParent>\r\n          )}\r\n          {step === 2 && (\r\n            <>\r\n              <FadeUpParent keyPass='Summary Page Parent 2'>\r\n                <Layout>\r\n                  <Layout.Section>\r\n                    <FadeUpChildren>\r\n                      <div style={{ padding: '2em' }}>\r\n                        <DisplayText>{`These were your 5 movie nominations, ${value}`}</DisplayText>\r\n                      </div>\r\n                    </FadeUpChildren>\r\n                  </Layout.Section>\r\n                </Layout>\r\n              </FadeUpParent>\r\n\r\n              <Spacer />\r\n\r\n              {nominated.map((element, index) => (\r\n                <div key={`${element.id} - showcase`}>\r\n                  <AnimationTrigger>\r\n                    <SummaryPosterAnimation\r\n                      left={index % 2 === 0 ? true : false}\r\n                      poster={element.Poster}\r\n                      title={element.Title}\r\n                      year={element.Year}\r\n                      index={index}\r\n                    />\r\n                    <Spacer />\r\n                  </AnimationTrigger>\r\n                </div>\r\n              ))}\r\n\r\n              <Spacer />\r\n\r\n              <FadeUpParent keyPass='Summary Page Parent 3'>\r\n                <Layout>\r\n                  <Layout.Section>\r\n                    <FadeUpChildren>\r\n                      <Card title='Thank you for your submissions' sectioned>\r\n                        <Button primary onClick={() => handleRestart()}>\r\n                          Restart\r\n                        </Button>\r\n                      </Card>\r\n                    </FadeUpChildren>\r\n                  </Layout.Section>\r\n                </Layout>\r\n              </FadeUpParent>\r\n            </>\r\n          )}\r\n        </Page>\r\n      </AnimatePresence>\r\n    </AppProvider>\r\n  );\r\n};\r\n\r\nexport default Summary;\r\n","C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\animation\\Variants.js",[],"C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\animation\\FadeUpParent.jsx",[],"C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\animation\\FadeUpChildren.jsx",[],"C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\animation\\SummaryPosterAnimation.jsx",[],"C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\animation\\AnimationTrigger.jsx",[],"C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\components\\Spacer.jsx",[],"C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\components\\NominationList.jsx",[],"C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\components\\RouterNavigation.jsx",[],"C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\components\\MovieDetails.jsx",[],"C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\components\\MovieList.jsx",[],"C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\components\\PosterPlaceholder.jsx",[],"C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\pages\\404.jsx",["88"],"import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { motion } from 'framer-motion';\n\nimport '../App.css';\n\n// Shopify Polaris Components\nimport {\n  Page,\n  Layout,\n  EmptyState,\n  Image,\n  TextStyle,\n  DisplayText,\n  TextContainer,\n} from '@shopify/polaris';\n\n// Custom animation components\nimport FadeUpParent from '../animation/FadeUpParent';\nimport FadeUpChildren from '../animation/FadeUpChildren';\nimport { floatingLoop } from '../animation/Variants';\n\n// React router function\nimport { NavigateTo } from '../components/RouterNavigation';\n\nconst NotFound = () => {\n  const history = useHistory();\n\n  return (\n    <Page>\n      <FadeUpParent delayed keyPass='Landing FadeUp Parent'>\n        <Layout>\n          <Layout.Section>\n            <EmptyState\n              action={{\n                content: 'Back home',\n                onAction: () => NavigateTo('/', history),\n              }}\n              image='https://doixzan7hf4ti.cloudfront.net/shopify-2021-challenge/404-page.svg'\n              fullWidth\n            >\n              <motion.div variants={floatingLoop}>\n                <DisplayText size='extraLarge'>?</DisplayText>\n              </motion.div>\n              <TextContainer>\n                <DisplayText size='large'>\n                  Uh oh, something went wrong\n                </DisplayText>\n                <TextStyle variation='code'>404 Not Found</TextStyle>\n              </TextContainer>\n            </EmptyState>\n\n            <Image src='' />\n          </Layout.Section>\n        </Layout>\n      </FadeUpParent>\n    </Page>\n  );\n};\n\nexport default NotFound;\n","C:\\Users\\justi\\Documents\\1 Coding Projects\\shopify-2021\\src\\components\\MobileNominationList.jsx",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":72,"column":70,"nodeType":"95","endLine":72,"endColumn":72,"suggestions":"96"},{"ruleId":"93","severity":1,"message":"97","line":102,"column":6,"nodeType":"95","endLine":102,"endColumn":8,"suggestions":"98"},{"ruleId":"93","severity":1,"message":"94","line":45,"column":70,"nodeType":"95","endLine":45,"endColumn":72,"suggestions":"99"},{"ruleId":"93","severity":1,"message":"100","line":60,"column":6,"nodeType":"95","endLine":60,"endColumn":8,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":20,"column":8,"nodeType":"104","messageId":"105","endLine":20,"endColumn":22},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'handleChange'. Either include it or remove the dependency array.","ArrayExpression",["108"],"React Hook useEffect has a missing dependency: 'toggleActiveToast'. Either include it or remove the dependency array.",["109"],["110"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["111"],"no-unused-vars","'FadeUpChildren' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"112","fix":"116"},{"desc":"117","fix":"118"},"Update the dependencies array to be: [handleChange]",{"range":"119","text":"120"},"Update the dependencies array to be: [toggleActiveToast]",{"range":"121","text":"122"},{"range":"123","text":"120"},"Update the dependencies array to be: [history]",{"range":"124","text":"125"},[2502,2504],"[handleChange]",[3565,3567],"[toggleActiveToast]",[1376,1378],[1862,1864],"[history]"]